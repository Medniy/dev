---
- name: Ensure nginx is installed
  ansible.builtin.package:
    name: nginx
    update_cache: true
  notify: Restart_nginx

- name: Ensure Python package manager is installed
  ansible.builtin.package:
    name: python3-pip
    state: present

- name: Ensure cryptography library is installed and up-to-date
  ansible.builtin.pip:
    name: cryptography
    state: latest

- name: Create directories for TLS certificates
  ansible.builtin.file:
    path: "{{ complex_role_tls_dir }}"
    state: directory
    mode: '0750'

- name: Copy TLS files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ complex_role_tls_dir }}"
    mode: '0600'
    force: no
  loop:
    - "{{ complex_role_key_file }}"
    - "{{ complex_role_cert_file }}"
  notify: Restart_nginx

- name: Создать новый самоподписанный сертификат
  community.crypto.x509_certificate:
    path: '{{ complex_role_tls_dir + complex_role_cert_file }}'
    privatekey_path: '{{ complex_role_tls_dir + complex_role_key_file }}'
    provider: selfsigned
    state: present
  notify: Restart_nginx

- name: Manage nginx config template
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "{{ complex_role_conf_file }}"
    mode: '0644'
  notify: Restart_nginx

- name: Enable configuration
  ansible.builtin.file:
    src: /etc/nginx/sites-available/default
    dest: /etc/nginx/sites-enabled/default
    state: link
  notify: Restart_nginx

- name: Install home page
  ansible.builtin.template:
    src: index.html.j2
    dest: /usr/share/nginx/html/index.html
    mode: '0644'
  notify: Restart_nginx
...
