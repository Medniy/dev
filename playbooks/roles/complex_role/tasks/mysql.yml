---


- name: Install packages for MariaDB Debian
  block:   

    - name: Установить MariaDB Server
      ansible.builtin.apt:
        name: 
          - mariadb-server
          - mariadb-client
          - python3-pip
        state: present
        update_cache: yes

    - name: Listen MariaDB bind address
      ansible.builtin.lineinfile:
        path: /etc/mysql/my.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        state: present
     

    - name: Check MySQL service start
      ansible.builtin.shell: service mariadb status || /etc/init.d/mariadb start
      changed_when: false
      failed_when: false
  when: ansible_facts['distribution'] == 'Debian'

- name: Install packages for mysql Ubuntu
  block:
    - name: install packeges
      ansible.builtin.apt:
        update_cache: true
        name:
          - mysql-server
          - mysql-client
          - python3-pip
        state: present  
    
    - name: Listen
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        state: present
      notify: Restart_mysql
    
    - name: Check MySQL service start
      ansible.builtin.shell: service mysql status || /etc/init.d/mysql start
      changed_when: false
      failed_when: false
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Install requirements
  ansible.builtin.pip:
    name: PyMySQL
    state: present
    executable: /usr/bin/pip3

- name: Immediately execute the handler
  meta: flush_handlers

- name: Create database
  community.mysql.mysql_db:
    name: "{{ complex_role_database_name }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create database user
  community.mysql.mysql_user:
    name: "{{ complex_role_database_user }}"
    password: "{{ complex_role_database_password }}"
    priv: '{{ complex_role_database_name }}.*:ALL'
    host: '%'
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  
...
