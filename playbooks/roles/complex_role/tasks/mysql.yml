---


- name: Install packages for mysql Debian
  block: 
    - name: Debug os_family
      ansible.builtin.debug:
        msg: "OS family is {{ ansible_facts['distribution'] }}"

    - name: Установить gpg
      ansible.builtin.apt:
        name: gpg
        state: present    
        update_cache: yes

    - name: Добавить официальный репозиторий MySQL
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 trusted=yes] https://repo.mysql.com/apt/debian bookworm mysql-8.0"
        state: present
        filename: mysql-apt-config
        update_cache: yes

    - name: Добавить ключ репозитория MySQL
      ansible.builtin.apt_key:
        url: "https://repo.mysql.com/RPM-GPG-KEY-mysql"
        state: present

    - name: Обновить кэш APT
      ansible.builtin.apt:
        update_cache: yes

    - name: Установить MySQL Server
      ansible.builtin.apt:
        name: mysql-server
        state: present

    - name: Убедиться, что MySQL запущен
      ansible.builtin.service:
        name: mysql
        state: started
        enabled: yes
  when: ansible_facts['distribution'] == 'Debian'

- name: Install packages for mysql Ubuntu
  block:
    - name: Debug os_family
      ansible.builtin.debug:
        msg: "OS family is {{ ansible_facts['distribution'] }}"

    - name: install packeges
      ansible.builtin.apt:
        update_cache: true
        name:
          - mysql-server
          - mysql-client
          - python3-pip
        state: present

    - name: Install requirements
      ansible.builtin.pip:
        name: PyMySQL
        state: present
        executable: /usr/bin/pip3
  when: ansible_facts['distribution'] == 'Ubuntu'

- name: Listen
  ansible.builtin.lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^bind-address'
    line: 'bind-address = 0.0.0.0'
    state: present
  notify: Restart_mysql

- name: Immediately execute the handler
  meta: flush_handlers

- name: Check MySQL service start
  ansible.builtin.shell: service mysql status || /etc/init.d/mysql start
  changed_when: false
  failed_when: false

- name: Create database
  community.mysql.mysql_db:
    name: "{{ complex_role_database_name }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create database user
  community.mysql.mysql_user:
    name: "{{ complex_role_database_user }}"
    password: "{{ complex_role_database_password }}"
    priv: '{{ complex_role_database_name }}.*:ALL'
    host: '%'
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  
...
